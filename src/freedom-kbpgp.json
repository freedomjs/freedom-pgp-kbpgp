{
  "name": "freedom-kbpgp",
  "description": "kbpgp Freedom manifest",
  "app": {
    "script": ["kbpgp.js", "freedom-kbpgp.js"]
  },
  "provides" : [
    "freedom-kbpgp"
  ],
  "api": {
    "ERRCODE": {"type": "constant", "value": {
      "KEYS_NOT_LOADED":    "No keys in memory - initialize first",
      "MALFORMED":          "Malformed armored message",
      "INVALID_PASSPHRASE": "Wrong passphrase",
      "KEY_NOT_GENERATED":  "Trying to generate key, but it already exists",
      "KEY_DOES_NOT_EXIST": "Trying to load a key that's not there",
      "BAD_SIGNATURE":      "Invalid signature on call to verify"
    }},

    "constructor": { "value": [{
      "name": "string"
    }]},

    "initialize": {
      type: "method",
      value: ["string"],
      ret: [],
      err: { "errcode": "string", "message": "string" }
    },

    "exportPublicKey": {
      type: "method",
      value: [],
      ret: ["string"],
      err: { "errcode": "string", "message": "string" }
    },

    "importPublicKey": {
      type: "method",
      value: [
        "string",
        "string"
      ],
      ret: [],
      err: { "errcode": "string", "message": "string" }
    },

    "encrypt": {
      type: "method",
      value: [
        "string",
        "buffer"
      ],
      ret: ["buffer"],
      err: { "errcode": "string", "message": "string" }
    },

    "decrypt": {
      type: "method",
      value: ["buffer"],
      ret: ["buffer"],
      err: { "errcode": "string", "message": "string" }
    },

    "verify": {
      type: "method",
      value: ["buffer"],
      ret: ["string"],
      err: { "errcode": "string", "message": "string" }
    },

    "sign": {
      type: "method",
      value: ["buffer"],
      ret: ["buffer"],
      err: { "errcode": "string", "message": "string" }
    },

    "armor": {
      type: "method",
      value: ["buffer"],
      ret: ["buffer"],
      err: { "errcode": "string", "message": "string" }
    },

    "dearmor": {
      type: "method",
      value: ["buffer"],
      ret: ["buffer"],
      err: { "errcode": "string", "message": "string" }
    }
  },

  "permissions": [
    "core.log",
    "core.storage"
  ]
}
